name: Build .NET Core

on:
  push:
    branches:
      - master
      - develop
      - GA-*

env:
  MAIN_PROJECT: OneScript/OneScriptWeb.csproj
  TEST_PROJECT: OneScriptWeb.Tests/OneScriptWeb.Tests.csproj
  SOLUTION: OneScript.sln

jobs: 
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        dotnet-version: [3.1.301]
        include:
          - os: windows-latest
            RID: win-x64
            target: netcoreapp3.1
    defaults:
      run: 
        working-directory: src
    steps:

    # актуализация с сабмодулями
    - uses: actions/checkout@v2
      with: 
        submodules: true
    
    # установка дотнет
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    # Установка SonarScanner
    - run: dotnet tool install --global dotnet-sonarscanner --version 4.10.0

    # Java для dotnet
    - name: Setup java
      uses: actions/setup-java@v1
      with:
        java-version: 11

    # Старт SonarScanner
    - run: dotnet sonarscanner begin /k:"otymko_OneScript.Web" /o:"otymko" /d:sonar.login=${{ env.TOKEN }} /d:sonar.host.url=https://sonarcloud.io
      env:
        TOKEN: ${{ secrets.SONAR_TOKEN }}

    # Сборка
    - name: Build
      run: |
        dotnet build ${{env.MAIN_PROJECT}} -c Release -r ${{matrix.RID}} -f ${{ matrix.target }}
        dotnet test OneScriptWeb.Tests/OneScriptWeb.Tests.csproj -c Debug --runtime=win-x64 -f netcoreapp3.1 --logger="trx;LogFileName=win-x64.trx" --results-directory=testResults

    # Завершение SonarScanner
    - run: dotnet sonarscanner end /d:sonar.login=${{ env.TOKEN }}
      env:
          TOKEN: ${{ secrets.SONAR_TOKEN }}

    # Тесты
    #- name: Test
    #  run: dotnet test ${{env.TEST_PROJECT}} -c Release --runtime=${{matrix.RID}} -f ${{ matrix.target }} --logger="trx;LogFileName=${{matrix.RID}}.trx" --results-directory=testResults